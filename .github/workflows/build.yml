name: Build
on:
  - pull_request
  - push
jobs:
  e2e:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 5
      matrix:
        include:
          - db: mongodb:4

          - db: mongodb:5

          - db: mongodb:6

          - db: mongodb
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3

      - name: Run e2e tests
        run: go test -v ./... -tags e2e

  build:
    runs-on: ubuntu-latest
    needs:
      - e2e
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3

      - name: Install Go dependencies
        run: go install ./...

      - name: Lint Go
        uses: golangci/golangci-lint-action@v3

      - name: Go test
        run: go test -v ./... -tags unit

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v6
        with:
          strip_tag_prefix: v

      - name: Generate Docker tag
        id: docker
        run: |
          if [ "${{ steps.branch-name.outputs.is_tag }}" = "true"  ];
          then
            # Latest tag
            IMG_NAME="ghcr.io/${GITHUB_REPOSITORY,,}:latest"
            # Tag name (usually vX.Y.Z)
            IMG_NAME="${IMG_NAME},ghcr.io/${GITHUB_REPOSITORY,,}:${{ steps.branch-name.outputs.tag }}"

            echo "image_name=${IMG_NAME}" >> "$GITHUB_OUTPUT"
            echo "platforms=linux/amd64,linux/arm64,linux/arm/v7" >> "$GITHUB_OUTPUT"
          else
            # Use branch naming convention
            TAG="branch-${{ steps.branch-name.outputs.current_branch }}"
            # Change "/" for "-"
            TAG="${TAG//\//-}"
            # Set to lowercase
            TAG="${TAG,,}"

            echo "image_name=ghcr.io/${GITHUB_REPOSITORY,,}:${TAG}" >> "$GITHUB_OUTPUT"
            echo "platforms=linux/amd64" >> "$GITHUB_OUTPUT"
          fi

          if [ "${{ steps.branch-name.outputs.is_tag }}" = "true"  ];
          then
            echo "version=${{ steps.branch-name.outputs.tag }}" >> "$GITHUB_OUTPUT"
          else
            echo "version=development" >> "$GITHUB_OUTPUT"
          fi

          echo "commit_id=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
          echo "gitRepo=github.com/${GITHUB_REPOSITORY}" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            GIT_COMMIT=${{ steps.docker.outputs.commit_id }}
            GIT_REPO=${{ steps.docker.outputs.gitRepo }}
            VERSION=${{ steps.docker.outputs.version }}
          platforms: ${{ steps.docker.outputs.platforms }}
          push: true
          tags: ${{ steps.docker.outputs.image_name }}

      - name: Run GoReleaser
        if: steps.branch-name.outputs.is_tag == 'true'
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
